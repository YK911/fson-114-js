/**
 * –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω—å–æ–≥–æ –≤–∏–∫–ª–∏–∫–∞ (callback)
 *
 * - –§—É–Ω–∫—Ü—ñ—è —è–∫ –∑–Ω–∞—á–µ–Ω–Ω—è
 * - –ö–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó
 * - –Ü–Ω–ª–∞–π–Ω-–∫–æ–ª–±–µ–∫–∏
 */

function registerGuest(name, callback) {
  // name = "Mango"
  // callback = function (guestName) { console.log(`–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ ${guestName}`) }
  callback(name);
}

// registerGuest("Mango", function (guestName) {
//   console.log(`–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ ${guestName}`);
// });

// registerGuest("Mango", function (guestName) {
//   console.log(`–ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–∏–±—Ä–∞—Ç–∏ –≤–∞—à –Ω–æ–º–µ—Ä ${guestName}?`);
// });

// registerGuest("Poly", function (guestName) {
//   console.log(`–õ–∞—Å–∫–æ–≤–æ –ø—Ä–æ—Å–∏–º–æ –ø–æ—Å—Ç—ñ–π–Ω–∏—Ö –≥–æ—Å—Ç–µ–π: ${guestName}`);
// });

/**
 * –§—É–Ω–∫—Ü—ñ—è calc(a, b, callback)
 */

function calc(a, b, callback) {
  // a = 2
  // b = 3
  const result = callback(a, b);
  console.log("calc:", result);

  // üí©üí©üí©
  // if (operator === "**") {
  //   base ** power;
  // } else if (operator === "%") {
  //   numerator % denominator;
  // } else if (operator === "*") {
  //   leftOperand * rightOperand;
  // } else if (operator === "/") {
  //   leftOperand / rightOperand;
  // }
}

// callback-hell

// calc(2, 3, pow);

// calc(10, 8, rest);

// calc(1, 10, minus);

// functions
function pow(base, power) {
  return base ** power;
}
function rest(numerator, denominator) {
  return numerator % denominator;
}
function minus(leftOperand, rightOperand) {
  return leftOperand - rightOperand;
}

const res1 = pow(4, 2);
// console.log(res1);

/**
 * –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î –º–∞—Å–∏–≤,
 * –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É.
 * –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å
 * —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–ª–±–µ–∫–∞.
 */

function each(array, callback) {
  array = [64, 49, 36, 25, 16];
  // callback = function (value) {console.log("res2  res2:", res2);return value * 2;};
  const newArray = [];
  for (const item of array) {
    const result = callback(item);
    newArray.push(result);
  }
  return newArray;
}

const res2 = each([64, 49, 36, 25, 16], function (value) {
  return value * 2;
});
console.log("res2:", res2);

const res3 = each([64, 49, 36, 25, 16], function (value) {
  return value - 10;
});
console.log("res3:", res3);

const res4 = each([64, 49, 36, 25, 16], function (value) {
  return Math.sqrt(value);
});
console.log("res4:", res4);

const res5 = each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
  return Math.ceil(value);
});
console.log("res5 :", res5);

const res6 = each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
  return Math.floor(value);
});
console.log("res6:", res6);

// Logger from Kahoot

function foo(callback) {
  callback(10);
}

function logger(a, b) {
  console.log(a + b);
}

// foo(logger);
